# Generated by Django 4.2 on 2023-04-08 04:32

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "slug",
                    models.SlugField(
                        help_text="Please use only letters, numbers, underscores or hyphens; must be unique.",
                        unique=True,
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Enter an integer value to define the display order.",
                    ),
                ),
                ("show_on_front_page", models.BooleanField(default=False)),
                ("show_in_menu", models.BooleanField(default=False)),
                (
                    "is_tag_list",
                    models.BooleanField(
                        default=False,
                        help_text="If enabled, this category will show a list of tags first instead of posts+tag filters.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CategoryTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                ("categories", models.ManyToManyField(blank=True, to="blog.category")),
            ],
            options={
                "verbose_name": "Category tag",
                "verbose_name_plural": "Category tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TaggedWithCategoryTags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.IntegerField(db_index=True, verbose_name="object ID"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_tagged_items",
                        to="contenttypes.contenttype",
                        verbose_name="content type",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_tags",
                        to="blog.categorytag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                (
                    "slug",
                    models.SlugField(
                        help_text="Please use only letters, numbers, underscores or hyphens; must be unique, auto-insrements if duplicates are found.",
                        max_length=250,
                        unique=True,
                    ),
                ),
                (
                    "preview_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="blog_previews/"
                    ),
                ),
                ("body", ckeditor.fields.RichTextField()),
                ("publish", models.DateTimeField(default=django.utils.timezone.now)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("DF", "Draft"), ("PB", "Published")],
                        default="DF",
                        max_length=2,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("featured_order", models.IntegerField(default=0)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("categories", models.ManyToManyField(to="blog.category")),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="Category tags, comma separated",
                        through="blog.TaggedWithCategoryTags",
                        to="blog.CategoryTag",
                        verbose_name="Category tags",
                    ),
                ),
            ],
            options={
                "ordering": ["-publish"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=80)),
                ("email", models.EmailField(max_length=254)),
                ("active", models.BooleanField(default=True)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="blog.post",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="FeaturedPost",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("blog.post",),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["-publish"], name="blog_post_publish_bb7600_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["created"], name="blog_commen_created_0e6ed4_idx"
            ),
        ),
    ]
